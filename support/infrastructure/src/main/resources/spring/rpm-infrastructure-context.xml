<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:security="http://www.springframework.org/schema/security"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
						   http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
						   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
						   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:property-placeholder location="classpath*:spring/props/*.properties"/>
	<aop:aspectj-autoproxy/>
	<context:spring-configured />
	<context:load-time-weaver/>

	<security:global-method-security jsr250-annotations="enabled" order="6"/>

	<context:component-scan base-package="no.officenet.example.rpm" scope-resolver="no.officenet.example.rpm.support.infrastructure.spring.CdiScopeMetadataResolver"/>

	<tx:annotation-driven order="5"/>

	<bean id="jpaVendorAdapter"
		  class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
		<property name="database" value="${infrastructure.database.vendor}"/>
		<property name="showSql" value="${infrastructure.jpa.showSql}"/>
		<property name="generateDdl" value="${infrastructure.jpa.generateDdl}"/>
	</bean>

	<bean id="RPM"
		  class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="rpmDataSource"/>
		<property name="persistenceUnitName" value="RPM"/>
		<property name="packagesToScan" value="no.officenet.example.rpm"/>
		<property name="persistenceUnitPostProcessors" ref="puPosProcessor"/>
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
		<property name="jpaDialect" ref="jpaDialect"/>
		<property name="jpaProperties">
			<props>
				<prop key="eclipselink.cache.shared.default">false</prop>
				<prop key="javax.persistence.sharedCache.mode">ENABLE_SELECTIVE</prop>
			</props>
		</property>
	</bean>

	<bean id="puPosProcessor" class="no.officenet.example.rpm.support.infrastructure.jpa.ClasspathScanningPersistenceUnitPostProcessor">
		<constructor-arg value="no.officenet.example.rpm"/>
	</bean>

	<bean id="jpaDialect" class="no.officenet.example.rpm.support.infrastructure.jpa.RpmPersistenceExceptionTranslator">
		<property name="vendorAdapter" ref="jpaVendorAdapter"/>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="RPM"/>
		<property name="jpaDialect" ref="jpaDialect"/>
	</bean>

	<!-- Transform exceptions thrown by the persistence-provider to spring DataAccessExceptions  -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

	<!-- Look for and process JPA annotations -->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

	<bean id="liftSchedulerWorkerQueue" class="java.util.concurrent.ArrayBlockingQueue">
		<!--
				   Constructor arguments in order:
					   int capacity,
					   boolean fair
				-->
		<constructor-arg index="0" value="200000"/>
		<constructor-arg index="1" value="true"/>
	</bean>

	<bean id="liftSchedulerExecutor" class="java.util.concurrent.ThreadPoolExecutor"
		  destroy-method="shutdown">
		<!--
				   Constructor arguments in order:
					   int corePoolSize,
					   int maximumPoolSize,
					   long keepAliveTime,
					   TimeUnit unit,
					   BlockingQueue<Runnable> workQueue
				-->
		<constructor-arg index="0" value="16"/>
		<constructor-arg index="1" value="400"/>
		<constructor-arg index="2" value="60"/>
		<constructor-arg index="3" value="SECONDS"/>
		<constructor-arg index="4" ref="liftSchedulerWorkerQueue"/>
	</bean>

</beans>